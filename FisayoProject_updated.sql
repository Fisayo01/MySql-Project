-- Creating database
create database myproject;

-- Use myproject database
use myproject;

-- create table orders
create table orders(
Order_id varchar (15) primary key,
Sale_date varchar (15),
Sale_channel varchar (50),
Currency varchar (15),
Salesteam_id int,
Store_id int,
Product_id int,
Order_quantity int,
Unit_price Decimal (8,2),
Unit_cost decimal (8,2)
);
-- Create table Sales_team
create table Sales_team(
Salesteam_id int primary key,
Sales_team varchar(50),
Region varchar(50)
);
-- Create table Store
create table Store(
Store_id int primary key,
Store_name varchar(50),
State_code varchar(15),
State varchar(50)
);
-- Create table Product
create table Product(
Product_id int primary key,
Product_name varchar(50),
Product_category varchar(50)
);

-- update orders table to convert the date column from text to date
update orders set sale_date = str_to_date(sale_date, "%m/%d/%Y");

-- create a joint table for the four tables
create table Sales_info as 
select orders.order_id, orders.sale_date, orders.sale_channel, sales_team.sales_team, sales_team.region, product.product_name, 
product.product_category, store.store_name, store.state, orders.order_quantity, orders.unit_cost, orders.unit_price
from orders
left join sales_team on orders.salesteam_id = sales_team.salesteam_id
left join product on orders.product_id = product.product_id
left join store on orders.store_id = store.store_id;

-- add calculated columns
alter table sales_info
add column Sales_price decimal(8,2) as (unit_price * order_quantity),
add column Cost_price decimal(8,2) as (unit_cost * order_quantity),
add column Profit decimal(8,2) as (Sales_price - Cost_price);

-- Alter table orders to add foreign keys
alter table orders
add constraint Fk_product_id foreign key (Product_id) references product(product_id),
add constraint Fk_Salesteam_id foreign key (Salesteam_id) references Sales_team (Salesteam_id),
add constraint Fk_store_id foreign key (store_id) references store (Store_id);

-- 1. What is the total sales revenue generated by the company?
select sum(Sales_price) as Total_revenue
from Sales_info;

-- 2. Extract the product, order quantities and order number for product sold through the distributor and in-store only
select Order_id, Product_name, Order_quantity
from Sales_info
where sale_channel in ("Distributor","In-store");

-- 3. Extract all the sales through Nicholas Cunningham
select*
from Sales_info
where Sales_team= "Nicholas Cunningham";

-- 4. Extract all orders where order quantity is greater than average
select*
from sales_info
where order_quantity > (select round(avg(Order_quantity)) from orders);

-- 5. What are the top 10 products based on order quantity (note: not product category) people order from the company
select Product_name, sum(order_quantity) as order_quantity
from sales_info
group by Product_name
order by Order_quantity desc
limit 10;

-- 6. How many orders are sold from stores located in Alabama
select State, count(order_quantity) as Total_orders
from sales_info
where state="Alabama";

-- 7. Obtain all the information for order with order number “SO471”
select*
from sales_info
where order_id="SO471";

-- 8. What is the average profit generated from each sales region? Sort the region in descending order of average profit generated.
select Region, round(avg(profit), 2) as Avg_profit
from sales_info
group by region
order by avg_profit desc;

-- 9. Using subquery, extract all data where sales price is greater than average sales price.
select*
from sales_info
where sales_price > (select round(avg(sales_price)) from sales_info);

-- 10. Extract the count of orders (not order quantities) for each product category for only product category with the number of orders greater than or equals to 2000.
Select Product_category, count(order_id) as no_orders
from  sales_info
group by product_category
having count(Product_category) >= 2000
order by no_orders desc;

-- 11a. What are the company top five most expensive products and the total number of order quantities for each product?
select Product_name, round(avg(unit_price), 2) as avg_price, sum(order_quantity) as total_qty_ordered
from sales_info
group by product_name
order by avg_price desc
limit 5; 

-- 11b. What are the company five cheapest products and the total number of order quantities for each product? 
select Product_name, round(avg(unit_price), 2) as avg_price, sum(order_quantity) as total_qty_ordered
from sales_info
group by product_name
order by avg_price 
limit 5; 
 